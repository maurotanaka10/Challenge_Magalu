//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem/PlayerInputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputSystem : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputSystem"",
    ""maps"": [
        {
            ""name"": ""Ninja"",
            ""id"": ""b58e4fc5-ba04-4615-8e8c-364e4589afcb"",
            ""actions"": [
                {
                    ""name"": ""Run"",
                    ""type"": ""Value"",
                    ""id"": ""a4e323f0-8218-49a8-93eb-236688921ea4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""18c64daa-bc6c-40c6-b496-1ccc12677dae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseObjects"",
                    ""type"": ""Button"",
                    ""id"": ""fd786ed3-6045-4a8f-9c1b-bd1b55a87739"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""1a6384fe-3abd-4cd7-832d-93adf220a021"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToBilly"",
                    ""type"": ""Button"",
                    ""id"": ""e6eeb603-6c65-4498-9691-0933bb8397c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""e2743796-d951-46b2-ab2c-6ca709ce97c8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a19d47b9-72a0-48b2-9be4-6799628759be"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e2e14041-fb7c-4d53-91b2-692288dc61d9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""715848f6-6590-45b1-badc-2b5196e9ee7f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6002108e-e3d7-4e71-809f-5fab22e9c2c7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7b7344cc-c8a8-4974-ae53-17a30afbf5ed"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66ed1b67-588d-4004-aa2e-456efd467025"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseObjects"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea3190ef-dc90-4096-8c62-0d6d706f85aa"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ceb630b2-8684-4ec1-98f6-0c9fa1e41358"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeToBilly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Billy"",
            ""id"": ""7fc52352-df84-4c31-ac67-3ee8f38bf773"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""7d959792-b4bb-48ad-a219-dd0f9403d04f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""1a44c857-cec7-4c82-aade-409736fe3c2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f80007c5-1748-4ec7-af8d-0816fe3712ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeToNinja"",
                    ""type"": ""Button"",
                    ""id"": ""7cd1fb44-c724-4305-a141-c40aec60483a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseObjects"",
                    ""type"": ""Button"",
                    ""id"": ""e6240b79-0235-4968-a8c7-df9606a5cbed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""43cdd8db-4337-4819-b40a-5ec06535784b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d5ec671a-de7f-49e4-b280-5c81df20cce5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b8386a4e-8cda-4704-a500-4aa4ee11bb02"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b070d38d-ddd6-45c1-a0f3-9cc97248d092"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3954f953-4525-4d44-b10f-639d52bca6c1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f57014c6-01b6-4a13-bc6b-50bd936fbd78"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87b155f5-834d-43d4-95ee-c9c0e53c4629"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22c5c5da-3eeb-4152-9db3-8c99017a2ef9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeToNinja"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""292c5417-519d-4171-bbe0-5a525097c84a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseObjects"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ninja
        m_Ninja = asset.FindActionMap("Ninja", throwIfNotFound: true);
        m_Ninja_Run = m_Ninja.FindAction("Run", throwIfNotFound: true);
        m_Ninja_Jump = m_Ninja.FindAction("Jump", throwIfNotFound: true);
        m_Ninja_UseObjects = m_Ninja.FindAction("UseObjects", throwIfNotFound: true);
        m_Ninja_Attack = m_Ninja.FindAction("Attack", throwIfNotFound: true);
        m_Ninja_ChangeToBilly = m_Ninja.FindAction("ChangeToBilly", throwIfNotFound: true);
        // Billy
        m_Billy = asset.FindActionMap("Billy", throwIfNotFound: true);
        m_Billy_Walk = m_Billy.FindAction("Walk", throwIfNotFound: true);
        m_Billy_Run = m_Billy.FindAction("Run", throwIfNotFound: true);
        m_Billy_Jump = m_Billy.FindAction("Jump", throwIfNotFound: true);
        m_Billy_ChangeToNinja = m_Billy.FindAction("ChangeToNinja", throwIfNotFound: true);
        m_Billy_UseObjects = m_Billy.FindAction("UseObjects", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ninja
    private readonly InputActionMap m_Ninja;
    private INinjaActions m_NinjaActionsCallbackInterface;
    private readonly InputAction m_Ninja_Run;
    private readonly InputAction m_Ninja_Jump;
    private readonly InputAction m_Ninja_UseObjects;
    private readonly InputAction m_Ninja_Attack;
    private readonly InputAction m_Ninja_ChangeToBilly;
    public struct NinjaActions
    {
        private @PlayerInputSystem m_Wrapper;
        public NinjaActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Run => m_Wrapper.m_Ninja_Run;
        public InputAction @Jump => m_Wrapper.m_Ninja_Jump;
        public InputAction @UseObjects => m_Wrapper.m_Ninja_UseObjects;
        public InputAction @Attack => m_Wrapper.m_Ninja_Attack;
        public InputAction @ChangeToBilly => m_Wrapper.m_Ninja_ChangeToBilly;
        public InputActionMap Get() { return m_Wrapper.m_Ninja; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NinjaActions set) { return set.Get(); }
        public void SetCallbacks(INinjaActions instance)
        {
            if (m_Wrapper.m_NinjaActionsCallbackInterface != null)
            {
                @Run.started -= m_Wrapper.m_NinjaActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_NinjaActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_NinjaActionsCallbackInterface.OnRun;
                @Jump.started -= m_Wrapper.m_NinjaActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_NinjaActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_NinjaActionsCallbackInterface.OnJump;
                @UseObjects.started -= m_Wrapper.m_NinjaActionsCallbackInterface.OnUseObjects;
                @UseObjects.performed -= m_Wrapper.m_NinjaActionsCallbackInterface.OnUseObjects;
                @UseObjects.canceled -= m_Wrapper.m_NinjaActionsCallbackInterface.OnUseObjects;
                @Attack.started -= m_Wrapper.m_NinjaActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_NinjaActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_NinjaActionsCallbackInterface.OnAttack;
                @ChangeToBilly.started -= m_Wrapper.m_NinjaActionsCallbackInterface.OnChangeToBilly;
                @ChangeToBilly.performed -= m_Wrapper.m_NinjaActionsCallbackInterface.OnChangeToBilly;
                @ChangeToBilly.canceled -= m_Wrapper.m_NinjaActionsCallbackInterface.OnChangeToBilly;
            }
            m_Wrapper.m_NinjaActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @UseObjects.started += instance.OnUseObjects;
                @UseObjects.performed += instance.OnUseObjects;
                @UseObjects.canceled += instance.OnUseObjects;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @ChangeToBilly.started += instance.OnChangeToBilly;
                @ChangeToBilly.performed += instance.OnChangeToBilly;
                @ChangeToBilly.canceled += instance.OnChangeToBilly;
            }
        }
    }
    public NinjaActions @Ninja => new NinjaActions(this);

    // Billy
    private readonly InputActionMap m_Billy;
    private IBillyActions m_BillyActionsCallbackInterface;
    private readonly InputAction m_Billy_Walk;
    private readonly InputAction m_Billy_Run;
    private readonly InputAction m_Billy_Jump;
    private readonly InputAction m_Billy_ChangeToNinja;
    private readonly InputAction m_Billy_UseObjects;
    public struct BillyActions
    {
        private @PlayerInputSystem m_Wrapper;
        public BillyActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_Billy_Walk;
        public InputAction @Run => m_Wrapper.m_Billy_Run;
        public InputAction @Jump => m_Wrapper.m_Billy_Jump;
        public InputAction @ChangeToNinja => m_Wrapper.m_Billy_ChangeToNinja;
        public InputAction @UseObjects => m_Wrapper.m_Billy_UseObjects;
        public InputActionMap Get() { return m_Wrapper.m_Billy; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BillyActions set) { return set.Get(); }
        public void SetCallbacks(IBillyActions instance)
        {
            if (m_Wrapper.m_BillyActionsCallbackInterface != null)
            {
                @Walk.started -= m_Wrapper.m_BillyActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_BillyActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_BillyActionsCallbackInterface.OnWalk;
                @Run.started -= m_Wrapper.m_BillyActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_BillyActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_BillyActionsCallbackInterface.OnRun;
                @Jump.started -= m_Wrapper.m_BillyActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_BillyActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_BillyActionsCallbackInterface.OnJump;
                @ChangeToNinja.started -= m_Wrapper.m_BillyActionsCallbackInterface.OnChangeToNinja;
                @ChangeToNinja.performed -= m_Wrapper.m_BillyActionsCallbackInterface.OnChangeToNinja;
                @ChangeToNinja.canceled -= m_Wrapper.m_BillyActionsCallbackInterface.OnChangeToNinja;
                @UseObjects.started -= m_Wrapper.m_BillyActionsCallbackInterface.OnUseObjects;
                @UseObjects.performed -= m_Wrapper.m_BillyActionsCallbackInterface.OnUseObjects;
                @UseObjects.canceled -= m_Wrapper.m_BillyActionsCallbackInterface.OnUseObjects;
            }
            m_Wrapper.m_BillyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @ChangeToNinja.started += instance.OnChangeToNinja;
                @ChangeToNinja.performed += instance.OnChangeToNinja;
                @ChangeToNinja.canceled += instance.OnChangeToNinja;
                @UseObjects.started += instance.OnUseObjects;
                @UseObjects.performed += instance.OnUseObjects;
                @UseObjects.canceled += instance.OnUseObjects;
            }
        }
    }
    public BillyActions @Billy => new BillyActions(this);
    public interface INinjaActions
    {
        void OnRun(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnUseObjects(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnChangeToBilly(InputAction.CallbackContext context);
    }
    public interface IBillyActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnChangeToNinja(InputAction.CallbackContext context);
        void OnUseObjects(InputAction.CallbackContext context);
    }
}
